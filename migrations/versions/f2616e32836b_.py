"""empty message

Revision ID: f2616e32836b
Revises: d8045b5ab95f
Create Date: 2019-01-20 00:25:55.620140

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f2616e32836b'
down_revision = 'd8045b5ab95f'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('antidrugscore',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('stu_id', sa.String(length=20), nullable=False),
    sa.Column('exam_id', sa.Integer(), nullable=False),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['exam_id'], ['exam.id'], ),
    sa.ForeignKeyConstraint(['stu_id'], ['student.stu_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('biologicalscore',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('stu_id', sa.String(length=20), nullable=False),
    sa.Column('exam_id', sa.Integer(), nullable=False),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['exam_id'], ['exam.id'], ),
    sa.ForeignKeyConstraint(['stu_id'], ['student.stu_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('chinesescore',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('stu_id', sa.String(length=20), nullable=False),
    sa.Column('exam_id', sa.Integer(), nullable=False),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['exam_id'], ['exam.id'], ),
    sa.ForeignKeyConstraint(['stu_id'], ['student.stu_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('englishscore',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('stu_id', sa.String(length=20), nullable=False),
    sa.Column('exam_id', sa.Integer(), nullable=False),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['exam_id'], ['exam.id'], ),
    sa.ForeignKeyConstraint(['stu_id'], ['student.stu_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('geographyscore',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('stu_id', sa.String(length=20), nullable=False),
    sa.Column('exam_id', sa.Integer(), nullable=False),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['exam_id'], ['exam.id'], ),
    sa.ForeignKeyConstraint(['stu_id'], ['student.stu_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('historyscore',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('stu_id', sa.String(length=20), nullable=False),
    sa.Column('exam_id', sa.Integer(), nullable=False),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['exam_id'], ['exam.id'], ),
    sa.ForeignKeyConstraint(['stu_id'], ['student.stu_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('mathscore',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('stu_id', sa.String(length=20), nullable=False),
    sa.Column('exam_id', sa.Integer(), nullable=False),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['exam_id'], ['exam.id'], ),
    sa.ForeignKeyConstraint(['stu_id'], ['student.stu_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('politicalscore',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('stu_id', sa.String(length=20), nullable=False),
    sa.Column('exam_id', sa.Integer(), nullable=False),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['exam_id'], ['exam.id'], ),
    sa.ForeignKeyConstraint(['stu_id'], ['student.stu_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('speakingscore',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('stu_id', sa.String(length=20), nullable=False),
    sa.Column('exam_id', sa.Integer(), nullable=False),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['exam_id'], ['exam.id'], ),
    sa.ForeignKeyConstraint(['stu_id'], ['student.stu_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('totalscore',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('stu_id', sa.String(length=20), nullable=False),
    sa.Column('exam_id', sa.Integer(), nullable=False),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['exam_id'], ['exam.id'], ),
    sa.ForeignKeyConstraint(['stu_id'], ['student.stu_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('writtenscore',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('stu_id', sa.String(length=20), nullable=False),
    sa.Column('exam_id', sa.Integer(), nullable=False),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['exam_id'], ['exam.id'], ),
    sa.ForeignKeyConstraint(['stu_id'], ['student.stu_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('writtenscore')
    op.drop_table('totalscore')
    op.drop_table('speakingscore')
    op.drop_table('politicalscore')
    op.drop_table('mathscore')
    op.drop_table('historyscore')
    op.drop_table('geographyscore')
    op.drop_table('englishscore')
    op.drop_table('chinesescore')
    op.drop_table('biologicalscore')
    op.drop_table('antidrugscore')
    # ### end Alembic commands ###
